{"ast":null,"code":"import _defineProperty from \"/media/imran/96b4eb96-0cf8-4ce7-a89b-85777cf350f2/home/imran/Desktop/noctem/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SIGN_UP_FAIL, SIGN_UP_SUCCESS } from \"../action-types\";\nconst initialState = {\n  isSignedUp: false,\n  token: null\n};\n\nconst signUpReducer = (state = initialState, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case SIGN_UP_SUCCESS:\n      return _objectSpread({}, state, {\n        isSignedUp: true,\n        token: payload\n      });\n\n    case SIGN_UP_FAIL:\n      return _objectSpread({}, state, {\n        isSignedUp: false,\n        token: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default signUpReducer;","map":{"version":3,"sources":["/media/imran/96b4eb96-0cf8-4ce7-a89b-85777cf350f2/home/imran/Desktop/noctem/app/src/redux/signUp/signUp-reducer.js"],"names":["SIGN_UP_FAIL","SIGN_UP_SUCCESS","initialState","isSignedUp","token","signUpReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,YAAR,EAAsBC,eAAtB,QAA4C,iBAA5C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAC,KADQ;AAEnBC,EAAAA,KAAK,EAAC;AAFa,CAArB;;AAMC,MAAMC,aAAa,GAAG,CAACC,KAAK,GAACJ,YAAP,EAAoBK,MAApB,KAA6B;AAAA,QAC3CC,IAD2C,GAC3BD,MAD2B,CAC3CC,IAD2C;AAAA,QACtCC,OADsC,GAC3BF,MAD2B,CACtCE,OADsC;;AAGlD,UAAQD,IAAR;AACI,SAAKP,eAAL;AACI,+BACOK,KADP;AAEIH,QAAAA,UAAU,EAAE,IAFhB;AAGIC,QAAAA,KAAK,EAAEK;AAHX;;AAKJ,SAAKT,YAAL;AACI,+BACOM,KADP;AAEIH,QAAAA,UAAU,EAAE,KAFhB;AAGIC,QAAAA,KAAK,EAAE;AAHX;;AAKJ;AACI,aAAOE,KAAP;AAdR;AAkBD,CArBA;;AAuBA,eAAeD,aAAf","sourcesContent":["import {SIGN_UP_FAIL, SIGN_UP_SUCCESS} from \"../action-types\";\n\nconst initialState = {\n  isSignedUp:false,\n  token:null\n};\n\n\n const signUpReducer = (state=initialState,action)=>{\n  const {type,payload} = action;\n\n  switch (type) {\n      case SIGN_UP_SUCCESS:\n          return{\n              ...state,\n              isSignedUp: true,\n              token: payload\n          };\n      case SIGN_UP_FAIL:\n          return {\n              ...state,\n              isSignedUp: false,\n              token: null\n          };\n      default:\n          return state;\n  }\n\n\n};\n\n export default signUpReducer;"]},"metadata":{},"sourceType":"module"}