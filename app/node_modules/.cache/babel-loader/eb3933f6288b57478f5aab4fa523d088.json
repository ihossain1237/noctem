{"ast":null,"code":"var _jsxFileName = \"/home/imran/Desktop/noctem/app/src/components/productGrid/productGridItem/productGridItem.component.jsx\";\nimport React from 'react';\nimport './productGridItem.style.scss';\nimport 'hover.css';\nimport CustomButton from \"../../custom-button/customButton.component\";\nimport Img from 'react-image';\nimport { addToCart } from \"../../../redux/cart/cart.actions\";\nimport { connect } from \"react-redux\";\nimport { Spring } from \"react-spring/renderprops-universal\";\nimport { useSpring, animated } from \"react-spring\";\nimport Loader from \"../../loader/loader.component\";\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1];\n\nconst trans = (x, y, s) => \"perspective(600px) rotateX(\".concat(x, \"deg) rotateY(\").concat(y, \"deg) scale(\").concat(s, \")\");\n\nconst ProductGridItem = ({\n  product,\n  addToCart\n}) => {\n  const name = product.name,\n        image = product.image,\n        price = product.price;\n  return React.createElement(animated.div, {\n    class: \"container-fluid productGridItem \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"productGridItem-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Img, {\n    className: \"img-fluid\",\n    loader: Loader,\n    src: \"\".concat(image),\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"productGridItem-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"productGridItem-info-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, name), React.createElement(\"span\", {\n    className: \"productGridItem-info-price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"$\", \"\".concat(price)), React.createElement(CustomButton, {\n    onClick: () => addToCart(product),\n    customStyle: \"productGridItem-info-btn\",\n    btnText: 'Add to cart',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Add To Cart\")));\n};\n\nexport default connect(null, {\n  addToCart\n})(ProductGridItem);","map":{"version":3,"sources":["/home/imran/Desktop/noctem/app/src/components/productGrid/productGridItem/productGridItem.component.jsx"],"names":["React","CustomButton","Img","addToCart","connect","Spring","useSpring","animated","Loader","calc","x","y","window","innerHeight","innerWidth","trans","s","ProductGridItem","product","name","image","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,8BAAP;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,SAAR,QAAwB,kCAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,oCAArB;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,cAAjC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;AAEA,MAAMC,IAAI,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU,CAAC,EAAEA,CAAC,GAAGC,MAAM,CAACC,WAAP,GAAqB,CAA3B,IAAgC,EAAjC,EAAqC,CAACH,CAAC,GAAGE,MAAM,CAACE,UAAP,GAAoB,CAAzB,IAA8B,EAAnE,EAAuE,GAAvE,CAAvB;;AACA,MAAMC,KAAK,GAAG,CAACL,CAAD,EAAIC,CAAJ,EAAOK,CAAP,0CAA2CN,CAA3C,0BAA4DC,CAA5D,wBAA2EK,CAA3E,MAAd;;AAGA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,OAAD;AAASf,EAAAA;AAAT,CAAD,KAAyB;AAAA,QACtCgB,IADsC,GACjBD,OADiB,CACtCC,IADsC;AAAA,QACjCC,KADiC,GACjBF,OADiB,CACjCE,KADiC;AAAA,QAC3BC,KAD2B,GACjBH,OADiB,CAC3BG,KAD2B;AAI7C,SAAO,oBAAC,QAAD,CAAU,GAAV;AAAe,IAAA,KAAK,oCAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAK,IAAA,SAAS,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,SAAS,aAAd;AAA6B,IAAA,MAAM,EAAEb,MAArC;AAA8C,IAAA,GAAG,YAAKY,KAAL,CAAjD;AAA+D,IAAA,GAAG,EAAC,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADL,EAIK;AAAK,IAAA,SAAS,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CD,IAA/C,CADJ,EAEI;AAAO,IAAA,SAAS,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAqDE,KAArD,EAFJ,EAGI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAIlB,SAAS,CAACe,OAAD,CAApC;AAA+C,IAAA,WAAW,4BAA1D;AAAwF,IAAA,OAAO,EAAE,aAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CAJL,CAAP;AAYH,CAhBD;;AAmBA,eAAed,OAAO,CAAC,IAAD,EAAM;AAACD,EAAAA;AAAD,CAAN,CAAP,CAA0Bc,eAA1B,CAAf","sourcesContent":["import React from 'react';\n\nimport './productGridItem.style.scss';\nimport 'hover.css'\nimport CustomButton from \"../../custom-button/customButton.component\";\nimport Img from 'react-image';\nimport {addToCart} from \"../../../redux/cart/cart.actions\";\nimport {connect} from \"react-redux\";\nimport {Spring} from \"react-spring/renderprops-universal\";\nimport {useSpring,animated} from \"react-spring\";\nimport Loader from \"../../loader/loader.component\";\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1]\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n\n\nconst ProductGridItem = ({product,addToCart}) => {\n    const {name,image,price}  = product;\n\n\n    return <animated.div  class={`container-fluid productGridItem `}  >\n                <div className={`productGridItem-img`}>\n                    <Img className={`img-fluid`} loader={Loader}  src={`${image}`} alt=\"\"/>\n                </div>\n                <div className={`productGridItem-info`}>\n                    <span className={`productGridItem-info-name`}>{name}</span>\n                    <span  className={`productGridItem-info-price`}>${`${price}`}</span>\n                    <CustomButton onClick={()=>addToCart(product)} customStyle={`productGridItem-info-btn`} btnText={'Add to cart'}>Add To Cart</CustomButton>\n                </div>\n\n            </animated.div>\n\n};\n\n\nexport default connect(null,{addToCart})(ProductGridItem);\n"]},"metadata":{},"sourceType":"module"}