{"ast":null,"code":"var _jsxFileName = \"/home/imran/Desktop/noctem/app/src/pages/Products/Products.jsx\";\nimport React, { Component } from 'react';\nimport { fetchProducts } from \"../../redux/Shop/shop-actions\";\nimport ProductGrid from \"../../components/product-grid/product-grid\";\nimport Sidebar from \"../../components/sidebar/sidebar\";\nimport './Products.scss';\nimport { connect } from \"react-redux\";\n\nclass Products extends Component {\n  componentDidMount() {\n    const _this$props$match$par = this.props.match.params,\n          type = _this$props$match$par.type,\n          item = _this$props$match$par.item;\n    this.props.fetchProducts(type, item);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const _this$props$match$par2 = this.props.match.params,\n          type = _this$props$match$par2.type,\n          item = _this$props$match$par2.item;\n    const _prevProps$match$para = prevProps.match.params,\n          prevType = _prevProps$match$para.type,\n          prevItem = _prevProps$match$para.item;\n\n    if (type !== prevType || item !== prevItem) {\n      this.props.fetchProducts(type, item);\n    }\n  }\n\n  render() {\n    console.log(this.props.products);\n    return React.createElement(\"div\", {\n      className: \"products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(ProductGrid, {\n      products: this.props.products,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  shop: {\n    products\n  }\n}) => {\n  return {\n    products: products\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchProducts\n})(Products);","map":{"version":3,"sources":["/home/imran/Desktop/noctem/app/src/pages/Products/Products.jsx"],"names":["React","Component","fetchProducts","ProductGrid","Sidebar","connect","Products","componentDidMount","props","match","params","type","item","componentDidUpdate","prevProps","prevState","snapshot","prevType","prevItem","render","console","log","products","mapStateToProps","shop"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAO,iBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAG7BM,EAAAA,iBAAiB,GAAG;AAAA,kCAEK,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAFtB;AAAA,UAETC,IAFS,yBAETA,IAFS;AAAA,UAEHC,IAFG,yBAEHA,IAFG;AAGhB,SAAKJ,KAAL,CAAWN,aAAX,CAAyBS,IAAzB,EAA+BC,IAA/B;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAAA,mCAC1B,KAAKR,KAAL,CAAWC,KAAX,CAAiBC,MADS;AAAA,UACxCC,IADwC,0BACxCA,IADwC;AAAA,UAClCC,IADkC,0BAClCA,IADkC;AAAA,kCAENE,SAAS,CAACL,KAAV,CAAgBC,MAFV;AAAA,UAElCO,QAFkC,yBAExCN,IAFwC;AAAA,UAElBO,QAFkB,yBAExBN,IAFwB;;AAI/C,QAAID,IAAI,KAAKM,QAAT,IAAqBL,IAAI,KAAKM,QAAlC,EAA4C;AACxC,WAAKV,KAAL,CAAWN,aAAX,CAAyBS,IAAzB,EAA+BC,IAA/B;AACH;AACJ;;AAGDO,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWc,QAAvB;AACA,WACI;AAAK,MAAA,SAAS,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWc,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH;;AA5B4B;;AA+BjC,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAACF,IAAAA;AAAD;AAAP,CAAD,KAAwB;AAE5C,SAAO;AACHA,IAAAA,QAAQ,EAAEA;AADP,GAAP;AAIH,CAND;;AAQA,eAAejB,OAAO,CAACkB,eAAD,EAAkB;AAACrB,EAAAA;AAAD,CAAlB,CAAP,CAA0CI,QAA1C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {fetchProducts} from \"../../redux/Shop/shop-actions\";\nimport ProductGrid from \"../../components/product-grid/product-grid\";\nimport Sidebar from \"../../components/sidebar/sidebar\";\nimport './Products.scss'\nimport {connect} from \"react-redux\";\n\nclass Products extends Component {\n\n\n    componentDidMount() {\n\n        const {type, item} = this.props.match.params;\n        this.props.fetchProducts(type, item);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const {type, item} = this.props.match.params;\n        const {type: prevType, item: prevItem} = prevProps.match.params;\n\n        if (type !== prevType || item !== prevItem) {\n            this.props.fetchProducts(type, item);\n        }\n    }\n\n\n    render() {\n        console.log(this.props.products);\n        return (\n            <div className={`products`}>\n                <ProductGrid products={this.props.products}/>\n                <Sidebar/>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({shop: {products}}) => {\n\n    return {\n        products: products\n    }\n\n};\n\nexport default connect(mapStateToProps, {fetchProducts})(Products);"]},"metadata":{},"sourceType":"module"}