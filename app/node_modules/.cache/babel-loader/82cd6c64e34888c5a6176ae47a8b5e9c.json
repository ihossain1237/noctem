{"ast":null,"code":"var _jsxFileName = \"/home/imran/Desktop/noctem/app/src/pages/Products/Products.jsx\";\nimport React, { Component } from 'react';\nimport { fetchProducts } from \"../../redux/Shop/shop.actions\";\nimport ProductGrid from \"../../components/productGrid/productGrid.component\";\nimport Sidebar from \"../../components/sidebar/sidebar.component\";\nimport './Products.scss';\nimport { connect } from \"react-redux\";\nimport TopButton from \"../../components/topButton/topButton.component\";\nimport { Spring } from \"react-spring/renderprops-universal\";\n\nclass Products extends Component {\n  componentDidMount() {\n    const _this$props$match$par = this.props.match.params,\n          category = _this$props$match$par.category,\n          type = _this$props$match$par.type;\n    this.props.fetchProducts(category, type);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const _this$props$match$par2 = this.props.match.params,\n          category = _this$props$match$par2.category,\n          type = _this$props$match$par2.type;\n    const _prevProps$match$para = prevProps.match.params,\n          prevCategory = _prevProps$match$para.category,\n          prevType = _prevProps$match$para.type;\n\n    if (category !== prevCategory || type !== prevType) {\n      this.props.fetchProducts(category, type);\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    const category = this.props.match.params.category;\n    return React.createElement(Spring, {\n      from: {\n        background: 'red'\n      },\n      to: {\n        background: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, props => React.createElement(\"div\", {\n      style: props,\n      className: \"products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      category: category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(ProductGrid, {\n      products: this.props.products,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(TopButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  shop: {\n    products\n  }\n}) => {\n  return {\n    products: products\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchProducts\n})(Products);","map":{"version":3,"sources":["/home/imran/Desktop/noctem/app/src/pages/Products/Products.jsx"],"names":["React","Component","fetchProducts","ProductGrid","Sidebar","connect","TopButton","Spring","Products","componentDidMount","props","match","params","category","type","componentDidUpdate","prevProps","prevState","snapshot","prevCategory","prevType","window","scrollTo","render","background","products","mapStateToProps","shop"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AACA,OAAOC,WAAP,MAAwB,oDAAxB;AACA,OAAOC,OAAP,MAAoB,4CAApB;AACA,OAAO,iBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,gDAAtB;AACA,SAAQC,MAAR,QAAqB,oCAArB;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC7BQ,EAAAA,iBAAiB,GAAG;AAAA,kCAES,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAF1B;AAAA,UAETC,QAFS,yBAETA,QAFS;AAAA,UAECC,IAFD,yBAECA,IAFD;AAGhB,SAAKJ,KAAL,CAAWR,aAAX,CAAyBW,QAAzB,EAAmCC,IAAnC;AACH;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAAA,mCACtB,KAAKR,KAAL,CAAWC,KAAX,CAAiBC,MADK;AAAA,UACxCC,QADwC,0BACxCA,QADwC;AAAA,UAC9BC,IAD8B,0BAC9BA,IAD8B;AAAA,kCAEEE,SAAS,CAACL,KAAV,CAAgBC,MAFlB;AAAA,UAE9BO,YAF8B,yBAExCN,QAFwC;AAAA,UAEVO,QAFU,yBAEhBN,IAFgB;;AAG/C,QAAID,QAAQ,KAAKM,YAAb,IAA6BL,IAAI,KAAKM,QAA1C,EAAoD;AAChD,WAAKV,KAAL,CAAWR,aAAX,CAAyBW,QAAzB,EAAmCC,IAAnC;AACAO,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAkB,CAAlB;AACH;AACJ;;AAGDC,EAAAA,MAAM,GAAG;AAAA,UAEEV,QAFF,GAEc,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAF/B,CAEEC,QAFF;AAGL,WACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE;AAACW,QAAAA,UAAU,EAAC;AAAZ,OAAd;AAAkC,MAAA,EAAE,EAAE;AAACA,QAAAA,UAAU,EAAC;AAAZ,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKd,KAAK,IAAG;AAAK,MAAA,KAAK,EAAEA,KAAZ;AAAmB,MAAA,SAAS,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACT,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAEG,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,EAET,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWe,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFS,EAGT,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHS,CADb,CADJ;AASH;;AA5B4B;;AA+BjC,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAACF,IAAAA;AAAD;AAAP,CAAD,KAAwB;AAE5C,SAAO;AACHA,IAAAA,QAAQ,EAAEA;AADP,GAAP;AAIH,CAND;;AAQA,eAAepB,OAAO,CAACqB,eAAD,EAAkB;AAACxB,EAAAA;AAAD,CAAlB,CAAP,CAA0CM,QAA1C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {fetchProducts} from \"../../redux/Shop/shop.actions\";\nimport ProductGrid from \"../../components/productGrid/productGrid.component\";\nimport Sidebar from \"../../components/sidebar/sidebar.component\";\nimport './Products.scss'\nimport {connect} from \"react-redux\";\nimport TopButton from \"../../components/topButton/topButton.component\";\nimport {Spring} from \"react-spring/renderprops-universal\";\n\nclass Products extends Component {\n    componentDidMount() {\n\n        const {category, type} = this.props.match.params;\n        this.props.fetchProducts(category, type);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const {category, type} = this.props.match.params;\n        const {category: prevCategory, type: prevType} = prevProps.match.params;\n        if (category !== prevCategory || type !== prevType) {\n            this.props.fetchProducts(category, type);\n            window.scrollTo(0,0);\n        }\n    }\n\n\n    render() {\n\n        const {category} = this.props.match.params;\n        return (\n            <Spring from={{background:'red'}} to={{background:'white'}}>\n                {props=> <div style={props} className={`products`}>\n                <Sidebar category={category}/>\n                <ProductGrid products={this.props.products}/>\n                <TopButton/>\n            </div>}\n            </Spring>\n        );\n    }\n}\n\nconst mapStateToProps = ({shop: {products}}) => {\n\n    return {\n        products: products\n    }\n\n};\n\nexport default connect(mapStateToProps, {fetchProducts})(Products);"]},"metadata":{},"sourceType":"module"}