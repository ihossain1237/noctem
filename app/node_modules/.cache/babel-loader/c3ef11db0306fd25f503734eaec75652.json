{"ast":null,"code":"import _defineProperty from \"/home/imran/Desktop/noctem/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SIGN_IN_SUCCESS, SIGN_IN_FAIL } from \"../action-types\";\nconst initialState = {\n  isSignedIn: false,\n  token: null,\n  errors: null\n};\n\nconst signInReducer = (state = initialState, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case SIGN_IN_SUCCESS:\n      return _objectSpread({}, state, {\n        isSignedIn: true,\n        token: payload\n      });\n\n    case SIGN_IN_FAIL:\n      return _objectSpread({}, state, {\n        isSignedIn: false,\n        token: null,\n        errors: payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default signInReducer;","map":{"version":3,"sources":["/home/imran/Desktop/noctem/app/src/redux/auth/signIn-reducer.js"],"names":["SIGN_IN_SUCCESS","SIGN_IN_FAIL","initialState","isSignedIn","token","errors","signInReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,eAAR,EAAwBC,YAAxB,QAA2C,iBAA3C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAC,KADM;AAEjBC,EAAAA,KAAK,EAAC,IAFW;AAGjBC,EAAAA,MAAM,EAAC;AAHU,CAArB;;AAMA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAACL,YAAP,EAAqBM,MAArB,KAA8B;AAAA,QACzCC,IADyC,GACzBD,MADyB,CACzCC,IADyC;AAAA,QACpCC,OADoC,GACzBF,MADyB,CACpCE,OADoC;;AAGhD,UAAQD,IAAR;AACI,SAAKT,eAAL;AACI,+BACOO,KADP;AAEIJ,QAAAA,UAAU,EAAE,IAFhB;AAGIC,QAAAA,KAAK,EAAEM;AAHX;;AAMJ,SAAKT,YAAL;AAEI,+BACOM,KADP;AAEIJ,QAAAA,UAAU,EAAE,KAFhB;AAGIC,QAAAA,KAAK,EAAE,IAHX;AAIIC,QAAAA,MAAM,EAAEK;AAJZ;;AAMJ;AACI,aAAOH,KAAP;AAjBR;AAqBH,CAxBD;;AA2BA,eAAeD,aAAf","sourcesContent":["import {SIGN_IN_SUCCESS,SIGN_IN_FAIL} from \"../action-types\";\n\nconst initialState = {\n    isSignedIn:false,\n    token:null,\n    errors:null\n};\n\nconst signInReducer = (state=initialState, action)=>{\n    const {type,payload} = action;\n\n    switch (type) {\n        case SIGN_IN_SUCCESS:\n            return{\n                ...state,\n                isSignedIn: true,\n                token: payload\n            };\n\n        case SIGN_IN_FAIL:\n\n            return {\n                ...state,\n                isSignedIn: false,\n                token: null,\n                errors: payload\n            };\n        default:\n            return state;\n    }\n\n\n};\n\n\nexport default signInReducer;\n\n"]},"metadata":{},"sourceType":"module"}