{"ast":null,"code":"import _defineProperty from \"/home/imran/Desktop/noctem/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_USER } from \"../action-types\";\nconst INITIAL_STATE = {\n  email: null,\n  firstName: null,\n  lastName: null,\n  password: null\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_USER:\n      const _action$payload = action.payload,\n            email = _action$payload.email,\n            firstName = _action$payload.firstName,\n            lastName = _action$payload.lastName,\n            password = _action$payload.password;\n      return _objectSpread({}, state, {\n        email: email,\n        firstName: firstName,\n        lastName: lastName,\n        password: password\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/imran/Desktop/noctem/app/src/redux/user/user-reducer.js"],"names":["FETCH_USER","INITIAL_STATE","email","firstName","lastName","password","userReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,UAAR,QAAyB,iBAAzB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAC,IADc;AAElBC,EAAAA,SAAS,EAAC,IAFQ;AAGlBC,EAAAA,QAAQ,EAAC,IAHS;AAIlBC,EAAAA,QAAQ,EAAC;AAJS,CAAtB;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACN,aAAP,EAAsBO,MAAtB,KAA+B;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,UAAL;AAAA,8BAC8CQ,MAAM,CAACE,OADrD;AAAA,YACWR,KADX,mBACWA,KADX;AAAA,YACiBC,SADjB,mBACiBA,SADjB;AAAA,YAC2BC,QAD3B,mBAC2BA,QAD3B;AAAA,YACoCC,QADpC,mBACoCA,QADpC;AAEI,+BACOE,KADP;AAEIL,QAAAA,KAAK,EAACA,KAFV;AAGIC,QAAAA,SAAS,EAACA,SAHd;AAIIC,QAAAA,QAAQ,EAACA,QAJb;AAKIC,QAAAA,QAAQ,EAACA;AALb;;AAOJ;AACI,aAAOE,KAAP;AAXR;AAaH,CAdD;;AAgBA,eAAiBD,WAAjB","sourcesContent":["import {FETCH_USER} from \"../action-types\";\n\nconst INITIAL_STATE = {\n  email:null,\n    firstName:null,\n    lastName:null,\n    password:null\n\n};\n\nconst userReducer = (state=INITIAL_STATE, action)=>{\n    switch (action.type) {\n        case FETCH_USER:\n            const {email,firstName,lastName,password}=action.payload;\n            return{\n                ...state,\n                email:email,\n                firstName:firstName,\n                lastName:lastName,\n                password:password\n            };\n        default:\n            return state;\n    }\n};\n\nexport  default  userReducer;"]},"metadata":{},"sourceType":"module"}