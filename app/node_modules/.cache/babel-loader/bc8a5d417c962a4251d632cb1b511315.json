{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as copyToClipboard from 'copy-to-clipboard';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nexport var useCopyToClipboard = function useCopyToClipboard(value) {\n  var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3000;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      active = _React$useState2[0],\n      setActive = _React$useState2[1];\n\n  var onCopy = React.useCallback(function () {\n    copyToClipboard(value);\n    setActive(true);\n    var timeoutId = setTimeout(function () {\n      return setActive(false);\n    }, timeout);\n    return function () {\n      return clearTimeout(timeoutId);\n    };\n  }, [timeout, value]);\n  return [active, onCopy];\n};\n\nvar CopyToClipboard = function CopyToClipboard(props) {\n  var children = props.children,\n      timeout = props.timeout,\n      value = props.value;\n\n  var _useCopyToClipboard = useCopyToClipboard(value, timeout),\n      _useCopyToClipboard2 = _slicedToArray(_useCopyToClipboard, 2),\n      active = _useCopyToClipboard2[0],\n      onCopy = _useCopyToClipboard2[1];\n\n  return children(active, onCopy);\n};\n\nCopyToClipboard.propTypes = {\n  children: PropTypes.func.isRequired,\n  timeout: PropTypes.number,\n  value: PropTypes.string.isRequired\n};\nexport default CopyToClipboard;","map":null,"metadata":{},"sourceType":"module"}