{"ast":null,"code":"var _jsxFileName = \"/home/imran/Desktop/noctem/app/src/pages/Products/Products.jsx\";\nimport React, { Component } from 'react';\nimport { fetchProducts } from \"../../redux/Shop/shop.actions\";\nimport ProductGrid from \"../../components/productGrid/productGrid.component\";\nimport Sidebar from \"../../components/sidebar/sidebar.component\";\nimport './Products.scss';\nimport { connect } from \"react-redux\";\n\nclass Products extends Component {\n  componentDidMount() {\n    const _this$props$match$par = this.props.match.params,\n          category = _this$props$match$par.category,\n          type = _this$props$match$par.type;\n    this.props.fetchProducts(category, type);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const _this$props$match$par2 = this.props.match.params,\n          category = _this$props$match$par2.category,\n          type = _this$props$match$par2.type;\n    const _prevProps$match$para = prevProps.match.params,\n          prevCategory = _prevProps$match$para.category,\n          prevType = _prevProps$match$para.type;\n\n    if (category !== prevCategory || type !== prevType) {\n      this.props.fetchProducts(category, type);\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(ProductGrid, {\n      products: this.props.products,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  shop: {\n    products\n  }\n}) => {\n  return {\n    products: products\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchProducts\n})(Products);","map":{"version":3,"sources":["/home/imran/Desktop/noctem/app/src/pages/Products/Products.jsx"],"names":["React","Component","fetchProducts","ProductGrid","Sidebar","connect","Products","componentDidMount","props","match","params","category","type","componentDidUpdate","prevProps","prevState","snapshot","prevCategory","prevType","window","scrollTo","render","products","mapStateToProps","shop"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AACA,OAAOC,WAAP,MAAwB,oDAAxB;AACA,OAAOC,OAAP,MAAoB,4CAApB;AACA,OAAO,iBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAG7BM,EAAAA,iBAAiB,GAAG;AAAA,kCAES,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAF1B;AAAA,UAETC,QAFS,yBAETA,QAFS;AAAA,UAECC,IAFD,yBAECA,IAFD;AAGhB,SAAKJ,KAAL,CAAWN,aAAX,CAAyBS,QAAzB,EAAmCC,IAAnC;AACH;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAAA,mCACtB,KAAKR,KAAL,CAAWC,KAAX,CAAiBC,MADK;AAAA,UACxCC,QADwC,0BACxCA,QADwC;AAAA,UAC9BC,IAD8B,0BAC9BA,IAD8B;AAAA,kCAEEE,SAAS,CAACL,KAAV,CAAgBC,MAFlB;AAAA,UAE9BO,YAF8B,yBAExCN,QAFwC;AAAA,UAEVO,QAFU,yBAEhBN,IAFgB;;AAG/C,QAAID,QAAQ,KAAKM,YAAb,IAA6BL,IAAI,KAAKM,QAA1C,EAAoD;AAChD,WAAKV,KAAL,CAAWN,aAAX,CAAyBS,QAAzB,EAAmCC,IAAnC;AACAO,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAkB,CAAlB;AACH;AACJ;;AAGDC,EAAAA,MAAM,GAAG;AAGL,WACI;AAAK,MAAA,SAAS,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWc,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH;;AA5B4B;;AA+BjC,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAACF,IAAAA;AAAD;AAAP,CAAD,KAAwB;AAE5C,SAAO;AACHA,IAAAA,QAAQ,EAAEA;AADP,GAAP;AAIH,CAND;;AAQA,eAAejB,OAAO,CAACkB,eAAD,EAAkB;AAACrB,EAAAA;AAAD,CAAlB,CAAP,CAA0CI,QAA1C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {fetchProducts} from \"../../redux/Shop/shop.actions\";\nimport ProductGrid from \"../../components/productGrid/productGrid.component\";\nimport Sidebar from \"../../components/sidebar/sidebar.component\";\nimport './Products.scss'\nimport {connect} from \"react-redux\";\n\nclass Products extends Component {\n\n\n    componentDidMount() {\n\n        const {category, type} = this.props.match.params;\n        this.props.fetchProducts(category, type);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const {category, type} = this.props.match.params;\n        const {category: prevCategory, type: prevType} = prevProps.match.params;\n        if (category !== prevCategory || type !== prevType) {\n            this.props.fetchProducts(category, type);\n            window.scrollTo(0,0);\n        }\n    }\n\n\n    render() {\n\n\n        return (\n            <div className={`products`}>\n                <Sidebar/>\n                <ProductGrid products={this.props.products}/>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({shop: {products}}) => {\n\n    return {\n        products: products\n    }\n\n};\n\nexport default connect(mapStateToProps, {fetchProducts})(Products);"]},"metadata":{},"sourceType":"module"}