{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport parseValue from './lib/parseRangeValue';\nimport useKnob from './useKnob';\n\nvar useRangeKnob = function useRangeKnob(options) {\n  var _options$initialValue = options.initialValue,\n      initialValue = _options$initialValue === void 0 ? 3 : _options$initialValue,\n      _options$min = options.min,\n      min = _options$min === void 0 ? 0 : _options$min,\n      _options$max = options.max,\n      max = _options$max === void 0 ? parseValue(initialValue) : _options$max,\n      _options$step = options.step,\n      step = _options$step === void 0 ? 1 : _options$step,\n      rest = _objectWithoutProperties(options, [\"initialValue\", \"min\", \"max\", \"step\"]);\n\n  var unit = \"\".concat(initialValue).replace(\"\".concat(parseValue(initialValue)), '');\n  return useKnob(Object.assign({\n    initialValue: initialValue,\n    unit: unit,\n    min: parseValue(min),\n    max: parseValue(max),\n    step: parseValue(step),\n    type: 'range'\n  }, rest));\n};\n\nexport default useRangeKnob;","map":null,"metadata":{},"sourceType":"module"}