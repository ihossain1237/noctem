{"ast":null,"code":"var _jsxFileName = \"/home/imran/Desktop/noctem/app/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport CartItem from '../cart-item/cart-item.component';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions.js';\nimport CustomButton from \"../custom-button/custom-button\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  btnText: 'GO TO CHECKOUT',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}));\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cart.cartItems,\n    hidden: state.cart.hidden\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  toggleCartHidden\n})(CartDropdown));","map":{"version":3,"sources":["/home/imran/Desktop/noctem/app/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","withRouter","CartItem","toggleCartHidden","CustomButton","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps","state","cart","hidden"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;AAIA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IACpB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADD,GAKC;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CADF,EAUI,oBAAC,YAAD;AACI,EAAA,OAAO,EAAE,MAAM;AACXJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACH,GAJL;AAKI,EAAA,OAAO,EAAE,gBALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAVJ,CADF;;AAqBA,MAAMW,eAAe,GAAGC,KAAK,IAAG;AAC5B,SAAO;AACHT,IAAAA,SAAS,EAAES,KAAK,CAACC,IAAN,CAAWV,SADnB;AAEHW,IAAAA,MAAM,EAACF,KAAK,CAACC,IAAN,CAAWC;AAFf,GAAP;AAIH,CALD;;AAMA,eAAehB,UAAU,CAACD,OAAO,CAACc,eAAD,EAAiB;AAACX,EAAAA;AAAD,CAAjB,CAAP,CAA4CE,YAA5C,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport CartItem from '../cart-item/cart-item.component';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions.js';\nimport CustomButton from \"../custom-button/custom-button\";\n\n\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n  <div className='cart-dropdown'>\n    <div className='cart-items'>\n      {cartItems.length ? (\n        cartItems.map(cartItem => (\n          <CartItem key={cartItem.id} item={cartItem} />\n        ))\n      ) : (\n        <span className='empty-message'>Your cart is empty</span>\n      )}\n    </div>\n      <CustomButton\n          onClick={() => {\n              history.push('/checkout');\n              dispatch(toggleCartHidden());\n          }}\n          btnText={'GO TO CHECKOUT'}\n      />\n  </div>\n);\n\nconst mapStateToProps = state =>{\n    return {\n        cartItems: state.cart.cartItems,\n        hidden:state.cart.hidden\n    }\n};\nexport default withRouter(connect(mapStateToProps,{toggleCartHidden})(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}