{"ast":null,"code":"var _jsxFileName = \"/media/imran/96b4eb96-0cf8-4ce7-a89b-85777cf350f2/home/imran/Desktop/noctem/app/src/components/signUpFrom/signUpForm.component.jsx\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport \"./signUpForm.style.scss\";\nimport CustomButtonComponent from \"../custom-button/customButton.component\";\nimport FormInputCompoent from \"../formInput/formInput.compoent\";\nimport { signUp } from \"../../redux/signUp/signUp-actions\";\nimport { connect } from \"react-redux\";\n\nclass SignUpFormComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.signUp(formValues);\n      console.log(this.props.isSignedUp);\n\n      if (this.props.isSignedUp) {\n        window.alert('Sign Up successful');\n        this.props.history.push('/');\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sign-up-form-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"firstName\",\n      label: \"FIRST NAME\",\n      component: FormInputCompoent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"middleName\",\n      label: \"MIDDLE NAME  (optional)\",\n      component: FormInputCompoent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"lastName\",\n      label: \"LAST NAME\",\n      component: FormInputCompoent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sign-up-form-email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"email\",\n      type: \"email\",\n      label: \"EMAIL\",\n      component: FormInputCompoent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"confirmEmail\",\n      type: \"email\",\n      label: \"CONFIRM EMAIL\",\n      component: FormInputCompoent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sign-up-form-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      label: \"PASSWORD\",\n      component: FormInputCompoent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"confirmPassword\",\n      type: \"password\",\n      label: \"CONFIRM PASSWORD\",\n      component: FormInputCompoent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(CustomButtonComponent, {\n      type: \"submit\",\n      btnText: \"CREATE ACCOUNT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.firstName) {\n    errors.firstName = 'please enter your first name';\n  }\n\n  if (!formValues.lastName) {\n    errors.lastName = 'please enter your last name';\n  }\n\n  if (!formValues.email) {\n    errors.email = 'You must enter an email';\n  }\n\n  if (formValues.password) {\n    if (formValues.password.length < 8) {\n      errors.password = \"password needs to be more than 8 characters\";\n    }\n  }\n\n  if (!formValues.password) {\n    errors.password = 'You must enter a valid password';\n  }\n\n  if (formValues.email !== formValues.confirmEmail) {\n    errors.confirmEmail = \"Emails dont match\";\n  }\n\n  if (formValues.password !== formValues.confirmPassword) {\n    errors.confrmPassword = 'passwords dont match';\n  }\n\n  return errors;\n};\n\nconst mapStateToProps = state => {\n  return {\n    isSignedUp: state.signUp.isSignedUp\n  };\n};\n\nexport default reduxForm({\n  form: 'signUp',\n  validate\n})(connect(mapStateToProps, {\n  signUp\n})(SignUpFormComponent));","map":{"version":3,"sources":["/media/imran/96b4eb96-0cf8-4ce7-a89b-85777cf350f2/home/imran/Desktop/noctem/app/src/components/signUpFrom/signUpForm.component.jsx"],"names":["React","Field","reduxForm","CustomButtonComponent","FormInputCompoent","signUp","connect","SignUpFormComponent","Component","onSubmit","formValues","props","console","log","isSignedUp","window","alert","history","push","render","handleSubmit","validate","errors","firstName","lastName","email","password","length","confirmEmail","confirmPassword","confrmPassword","mapStateToProps","state","form"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport \"./signUpForm.style.scss\";\nimport CustomButtonComponent from \"../custom-button/customButton.component\";\nimport FormInputCompoent from \"../formInput/formInput.compoent\";\nimport {signUp} from \"../../redux/signUp/signUp-actions\";\nimport {connect} from \"react-redux\";\n\nclass SignUpFormComponent extends React.Component{\n\n\n\n    onSubmit = formValues=>{\n        this.props.signUp(formValues);\n        console.log(this.props.isSignedUp)\n        if (this.props.isSignedUp){\n            window.alert('Sign Up successful');\n            this.props.history.push('/');\n        }\n\n    };\n\n    render() {\n\n        return (\n            <form className={`sign-up-form`}  onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <div className={`sign-up-form-name`}>\n                    <Field name={`firstName`} label={`FIRST NAME`} component={FormInputCompoent}/>\n                    <Field name={`middleName`} label={`MIDDLE NAME  (optional)`} component={FormInputCompoent}/>\n                    <Field name={`lastName`} label={`LAST NAME`} component={FormInputCompoent}/>\n                </div>\n                <div className={`sign-up-form-email`}>\n                    <Field name={`email`} type={`email`} label={`EMAIL`} component={FormInputCompoent}/>\n                    <Field name={`confirmEmail`} type={`email`} label={`CONFIRM EMAIL`} component={FormInputCompoent}/>\n                </div>\n                <div className={`sign-up-form-password`}>\n                    <Field name={`password`} type={`password`} label={`PASSWORD`} component={FormInputCompoent}/>\n                    <Field name={`confirmPassword`} type={`password`} label={`CONFIRM PASSWORD`} component={FormInputCompoent}/>\n                </div>\n                <CustomButtonComponent type='submit' btnText={`CREATE ACCOUNT`}/>\n            </form>\n        );\n    }\n}\nconst validate = formValues => {\n    const errors = {};\n    if (!formValues.firstName){\n        errors.firstName = 'please enter your first name'\n    }\n    if (!formValues.lastName){\n        errors.lastName = 'please enter your last name'\n    }\n    if (!formValues.email) {\n        errors.email = 'You must enter an email'\n    }\n    if (formValues.password){\n        if (formValues.password.length<8){\n            errors.password = \"password needs to be more than 8 characters\"\n        }\n    }\n    if (!formValues.password) {\n        errors.password = 'You must enter a valid password';\n    }\n    if (formValues.email!==formValues.confirmEmail){\n        errors.confirmEmail = \"Emails dont match\"\n    }\n    if (formValues.password!==formValues.confirmPassword){\n        errors.confrmPassword = 'passwords dont match'\n    }\n    return errors;\n};\n\nconst mapStateToProps = state=>{\n  return{\n      isSignedUp: state.signUp.isSignedUp\n  }\n};\n\n\nexport default reduxForm({\n    form: 'signUp',\n    validate\n\n})(connect(mapStateToProps,{signUp})(SignUpFormComponent));"]},"metadata":{},"sourceType":"module"}