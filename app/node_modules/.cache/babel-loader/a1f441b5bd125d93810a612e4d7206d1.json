{"ast":null,"code":"import _defineProperty from \"/media/imran/96b4eb96-0cf8-4ce7-a89b-85777cf350f2/home/imran/Desktop/noctem/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_TO_CART, DELETE_FROM_CART, REMOVE_FROM_CART } from \"../action.types\";\nimport appData from \"../../api/appData\";\nexport const cartOperation = function (op, items, targetItem, targetEmail) {\n  const targetItemId = targetItem._id;\n  const targetIndex = items.findIndex(item => item._id === targetItemId);\n  let updatedItems = [];\n\n  if (op === ADD_TO_CART) {\n    if (targetIndex > -1) // items[targetIndex].itemCount+=1;\n      updatedItems = items.map(item => item._id === targetItem._id ? _objectSpread({}, item, {\n        itemCount: item.itemCount + 1\n      }) : item);else // items.push({...targetItem,itemCount:1});\n      updatedItems = [,,, items, _objectSpread({}, targetItem, {\n        itemCount: 1\n      })];\n  } else if (op === REMOVE_FROM_CART) {\n    if (items.length > 0) {\n      if (items[targetIndex].itemCount > 1) // items[targetIndex].itemCount-=1;\n        updatedItems = items.map(item => item._id === targetItem._id ? _objectSpread({}, item, {\n          itemCount: item.itemCount + 1\n        }) : item);else // items.splice(targetIndex,1);\n        updatedItems = items.filter(item => item._id !== targetItem._id);\n    }\n  } else if (op === DELETE_FROM_CART) items.splice(targetIndex, 1);\n\n  updateCart(items, targetEmail);\n  return items;\n};\nexport const updateCart = async (email, items) => {\n  if (email && items) {\n    const body = JSON.stringify({\n      email,\n      items\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await appData.post('/cart/update', body, config);\n  }\n};","map":{"version":3,"sources":["/media/imran/96b4eb96-0cf8-4ce7-a89b-85777cf350f2/home/imran/Desktop/noctem/app/src/redux/cart/cart.utils.js"],"names":["ADD_TO_CART","DELETE_FROM_CART","REMOVE_FROM_CART","appData","cartOperation","op","items","targetItem","targetEmail","targetItemId","_id","targetIndex","findIndex","item","updatedItems","map","itemCount","length","filter","splice","updateCart","email","body","JSON","stringify","config","headers","res","post"],"mappings":";;;;;;AAAA,SAAQA,WAAR,EAAqBC,gBAArB,EAAuCC,gBAAvC,QAA8D,iBAA9D;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAGA,OAAO,MAAMC,aAAa,GAAG,UAASC,EAAT,EAAYC,KAAZ,EAAkBC,UAAlB,EAA6BC,WAA7B,EAAyC;AAClE,QAAMC,YAAY,GAAGF,UAAU,CAACG,GAAhC;AACA,QAAMC,WAAW,GAAGL,KAAK,CAACM,SAAN,CAAgBC,IAAI,IAAEA,IAAI,CAACH,GAAL,KAAWD,YAAjC,CAApB;AACA,MAAIK,YAAY,GAAG,EAAnB;;AACA,MAAIT,EAAE,KAAGL,WAAT,EAAqB;AACjB,QAAIW,WAAW,GAAC,CAAC,CAAjB,EACI;AACAG,MAAAA,YAAY,GAAGR,KAAK,CAACS,GAAN,CAAUF,IAAI,IAAEA,IAAI,CAACH,GAAL,KAAYH,UAAU,CAACG,GAAvB,qBAAiCG,IAAjC;AAAsCG,QAAAA,SAAS,EAACH,IAAI,CAACG,SAAL,GAAe;AAA/D,WAAkEH,IAAlF,CAAf,CAFJ,KAII;AACAC,MAAAA,YAAY,GAAG,KAAIR,KAAJ,oBAAcC,UAAd;AAAyBS,QAAAA,SAAS,EAAC;AAAnC,SAAf;AACP,GAPD,MAQK,IAAIX,EAAE,KAAGH,gBAAT,EAA0B;AAC3B,QAAII,KAAK,CAACW,MAAN,GAAa,CAAjB,EAAmB;AACf,UAAIX,KAAK,CAACK,WAAD,CAAL,CAAmBK,SAAnB,GAA6B,CAAjC,EACI;AACAF,QAAAA,YAAY,GAAGR,KAAK,CAACS,GAAN,CAAUF,IAAI,IAAEA,IAAI,CAACH,GAAL,KAAYH,UAAU,CAACG,GAAvB,qBAAiCG,IAAjC;AAAsCG,UAAAA,SAAS,EAACH,IAAI,CAACG,SAAL,GAAe;AAA/D,aAAkEH,IAAlF,CAAf,CAFJ,KAII;AACAC,QAAAA,YAAY,GAAGR,KAAK,CAACY,MAAN,CAAaL,IAAI,IAAEA,IAAI,CAACH,GAAL,KAAWH,UAAU,CAACG,GAAzC,CAAf;AAGP;AACJ,GAXI,MAYA,IAAIL,EAAE,KAAGJ,gBAAT,EACDK,KAAK,CAACa,MAAN,CAAaR,WAAb,EAAyB,CAAzB;;AACJS,EAAAA,UAAU,CAACd,KAAD,EAAOE,WAAP,CAAV;AACA,SAAOF,KAAP;AAEH,CA7BM;AAgCP,OAAO,MAAMc,UAAU,GAAE,OAAOC,KAAP,EAAaf,KAAb,KAAqB;AAC1C,MAAIe,KAAK,IAAEf,KAAX,EAAiB;AAEb,UAAMgB,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACH,MAAAA,KAAD;AAAOf,MAAAA;AAAP,KAAf,CAAb;AACA,UAAMmB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADG,KAAf;AAKA,UAAMC,GAAG,GAAG,MAAMxB,OAAO,CAACyB,IAAR,CAAa,cAAb,EAA4BN,IAA5B,EAAiCG,MAAjC,CAAlB;AAEP;AAAC,CAXK","sourcesContent":["import {ADD_TO_CART, DELETE_FROM_CART, REMOVE_FROM_CART} from \"../action.types\";\nimport appData from \"../../api/appData\";\n\n\nexport const cartOperation = function(op,items,targetItem,targetEmail){\n    const targetItemId = targetItem._id;\n    const targetIndex = items.findIndex(item=>item._id===targetItemId);\n    let updatedItems = [];\n    if (op===ADD_TO_CART){\n        if (targetIndex>-1)\n            // items[targetIndex].itemCount+=1;\n            updatedItems = items.map(item=>item._id ===targetItem._id ? {...item,itemCount:item.itemCount+1}:item);\n        else\n            // items.push({...targetItem,itemCount:1});\n            updatedItems = [,,,items,{...targetItem,itemCount:1}];\n    }\n    else if (op===REMOVE_FROM_CART){\n        if (items.length>0){\n            if (items[targetIndex].itemCount>1)\n                // items[targetIndex].itemCount-=1;\n                updatedItems = items.map(item=>item._id ===targetItem._id ? {...item,itemCount:item.itemCount+1}:item);\n            else\n                // items.splice(targetIndex,1);\n                updatedItems = items.filter(item=>item._id!==targetItem._id);\n\n\n        }\n    }\n    else if (op===DELETE_FROM_CART)\n        items.splice(targetIndex,1);\n    updateCart(items,targetEmail);\n    return items;\n\n};\n\n\nexport const updateCart =async (email,items)=>{\n    if (email&&items){\n\n        const body = JSON.stringify({email,items});\n        const config = {\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        };\n        const res = await appData.post('/cart/update',body,config);\n\n}};"]},"metadata":{},"sourceType":"module"}