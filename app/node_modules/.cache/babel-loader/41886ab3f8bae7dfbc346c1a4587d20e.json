{"ast":null,"code":"import _defineProperty from \"/media/imran/96b4eb96-0cf8-4ce7-a89b-85777cf350f2/home/imran/Desktop/noctem/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_TO_CART, CLEAR_CART, DELETE_FROM_CART, REMOVE_FROM_CART } from \"../action.types\";\nimport appData from \"../../api/appData\";\nexport const cartOperation = function (op, items, targetItem, targetEmail) {\n  // const targetItemId = targetItem._id;\n  // const targetIndex = items.findIndex(item=>item._id===targetItemId);\n  // if (op===ADD_TO_CART){\n  //     if (targetIndex>-1)\n  //         items[targetIndex].itemCount+=1;\n  //     else\n  //         items.push({...targetItem,itemCount:1});\n  // }\n  // else if (op===REMOVE_FROM_CART){\n  //     if (items.length>0){\n  //         if (items[targetIndex].itemCount>1)\n  //             items[targetIndex].itemCount-=1;\n  //         else\n  //             items.splice(targetIndex,1);}\n  // }\n  // else if (op===DELETE_FROM_CART)\n  //     items.splice(targetIndex,1);\n  const existingCartItem = items.find(item => item._id === targetItem._id);\n  let updatedItems = [];\n\n  if (op === ADD_TO_CART) {\n    if (existingCartItem) {\n      updatedItems = items.map(item => item._id === targetItem._id ? _objectSpread({}, item, {\n        itemCount: item.itemCount + 1\n      }) : item);\n    } else {\n      updatedItems = [...items, _objectSpread({}, targetItem, {\n        itemCount: 1\n      })];\n    }\n  }\n\n  const deleteItem = () => items.filter(item => item._id !== targetItem._id);\n\n  if (op === REMOVE_FROM_CART) {\n    if (existingCartItem.itemCount === 1) {\n      updatedItems = items.filter(item => item._id !== targetItem._id);\n    } else if (existingCartItem.itemCount > 1) {\n      updatedItems = items.map(item => item._id === targetItem._id ? _objectSpread({}, item, {\n        itemCount: item.itemCount - 1\n      }) : item);\n    } else {\n      updatedItems = deleteItem();\n    }\n  }\n\n  if (op === DELETE_FROM_CART) updatedItems = deleteItem();\n  if (op === CLEAR_CART) updatedItems = [];\n  updateCart(targetEmail, updatedItems);\n  return updatedItems;\n};\nexport const updateCart = async (email, items) => {\n  if (email && items) {\n    const body = JSON.stringify({\n      email,\n      items\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await appData.post('/cart/update', body, config);\n  }\n};","map":{"version":3,"sources":["/media/imran/96b4eb96-0cf8-4ce7-a89b-85777cf350f2/home/imran/Desktop/noctem/app/src/redux/cart/cart.utils.js"],"names":["ADD_TO_CART","CLEAR_CART","DELETE_FROM_CART","REMOVE_FROM_CART","appData","cartOperation","op","items","targetItem","targetEmail","existingCartItem","find","item","_id","updatedItems","map","itemCount","deleteItem","filter","updateCart","email","body","JSON","stringify","config","headers","res","post"],"mappings":";;;;;;AAAA,SAAQA,WAAR,EAAqBC,UAArB,EAAiCC,gBAAjC,EAAmDC,gBAAnD,QAA0E,iBAA1E;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAGA,OAAO,MAAMC,aAAa,GAAG,UAASC,EAAT,EAAYC,KAAZ,EAAkBC,UAAlB,EAA6BC,WAA7B,EAAyC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,gBAAgB,GAAGH,KAAK,CAACI,IAAN,CACvBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAYL,UAAU,CAACK,GADR,CAAzB;AAGA,MAAIC,YAAY,GAAG,EAAnB;;AACA,MAAIR,EAAE,KAAGN,WAAT,EAAqB;AACjB,QAAIU,gBAAJ,EAAqB;AAEjBI,MAAAA,YAAY,GAAGP,KAAK,CAACQ,GAAN,CAAUH,IAAI,IAAEA,IAAI,CAACC,GAAL,KAAWL,UAAU,CAACK,GAAtB,qBAA8BD,IAA9B;AAAmCI,QAAAA,SAAS,EAACJ,IAAI,CAACI,SAAL,GAAe;AAA5D,WAA+DJ,IAA/E,CAAf;AACH,KAHD,MAGM;AACFE,MAAAA,YAAY,GAAG,CAAC,GAAGP,KAAJ,oBAAcC,UAAd;AAAyBQ,QAAAA,SAAS,EAAC;AAAnC,SAAf;AACH;AACJ;;AACD,QAAMC,UAAU,GAAG,MAAIV,KAAK,CAACW,MAAN,CAAaN,IAAI,IAAEA,IAAI,CAACC,GAAL,KAAWL,UAAU,CAACK,GAAzC,CAAvB;;AACA,MAAIP,EAAE,KAAGH,gBAAT,EAA0B;AACtB,QAAIO,gBAAgB,CAACM,SAAjB,KAA6B,CAAjC,EAAmC;AAC/BF,MAAAA,YAAY,GAAIP,KAAK,CAACW,MAAN,CAAaN,IAAI,IAAEA,IAAI,CAACC,GAAL,KAAWL,UAAU,CAACK,GAAzC,CAAhB;AACH,KAFD,MAEM,IAAIH,gBAAgB,CAACM,SAAjB,GAA2B,CAA/B,EAAiC;AACnCF,MAAAA,YAAY,GAAGP,KAAK,CAACQ,GAAN,CAAUH,IAAI,IAAEA,IAAI,CAACC,GAAL,KAAWL,UAAU,CAACK,GAAtB,qBAA8BD,IAA9B;AAAmCI,QAAAA,SAAS,EAACJ,IAAI,CAACI,SAAL,GAAe;AAA5D,WAA+DJ,IAA/E,CAAf;AACH,KAFK,MAED;AACDE,MAAAA,YAAY,GAAGG,UAAU,EAAzB;AACH;AACJ;;AACD,MAAIX,EAAE,KAAGJ,gBAAT,EACIY,YAAY,GAAGG,UAAU,EAAzB;AAEJ,MAAIX,EAAE,KAAGL,UAAT,EACIa,YAAY,GAAG,EAAf;AAEJK,EAAAA,UAAU,CAACV,WAAD,EAAaK,YAAb,CAAV;AACA,SAAOA,YAAP;AAEH,CAjDM;AAoDP,OAAO,MAAMK,UAAU,GAAE,OAAOC,KAAP,EAAab,KAAb,KAAqB;AAC1C,MAAIa,KAAK,IAAEb,KAAX,EAAiB;AAEb,UAAMc,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACH,MAAAA,KAAD;AAAOb,MAAAA;AAAP,KAAf,CAAb;AACA,UAAMiB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADG,KAAf;AAKA,UAAMC,GAAG,GAAG,MAAMtB,OAAO,CAACuB,IAAR,CAAa,cAAb,EAA4BN,IAA5B,EAAiCG,MAAjC,CAAlB;AAEP;AAAC,CAXK","sourcesContent":["import {ADD_TO_CART, CLEAR_CART, DELETE_FROM_CART, REMOVE_FROM_CART} from \"../action.types\";\nimport appData from \"../../api/appData\";\n\n\nexport const cartOperation = function(op,items,targetItem,targetEmail){\n    // const targetItemId = targetItem._id;\n    // const targetIndex = items.findIndex(item=>item._id===targetItemId);\n    // if (op===ADD_TO_CART){\n    //     if (targetIndex>-1)\n    //         items[targetIndex].itemCount+=1;\n    //     else\n    //         items.push({...targetItem,itemCount:1});\n    // }\n    // else if (op===REMOVE_FROM_CART){\n    //     if (items.length>0){\n    //         if (items[targetIndex].itemCount>1)\n    //             items[targetIndex].itemCount-=1;\n    //         else\n    //             items.splice(targetIndex,1);}\n    // }\n    // else if (op===DELETE_FROM_CART)\n    //     items.splice(targetIndex,1);\n    const existingCartItem = items.find(\n      item => item._id ===targetItem._id\n    );\n    let updatedItems = [];\n    if (op===ADD_TO_CART){\n        if (existingCartItem){\n\n            updatedItems = items.map(item=>item._id===targetItem._id?{...item,itemCount:item.itemCount+1}:item);\n        }else {\n            updatedItems = [...items,{...targetItem,itemCount:1}];\n        }\n    }\n    const deleteItem = ()=>items.filter(item=>item._id!==targetItem._id);\n    if (op===REMOVE_FROM_CART){\n        if (existingCartItem.itemCount===1){\n            updatedItems =  items.filter(item=>item._id!==targetItem._id);\n        }else if (existingCartItem.itemCount>1){\n            updatedItems = items.map(item=>item._id===targetItem._id?{...item,itemCount:item.itemCount-1}:item)\n        }else{\n            updatedItems = deleteItem();\n        }\n    }\n    if (op===DELETE_FROM_CART)\n        updatedItems = deleteItem();\n\n    if (op===CLEAR_CART)\n        updatedItems = [];\n\n    updateCart(targetEmail,updatedItems);\n    return updatedItems;\n\n};\n\n\nexport const updateCart =async (email,items)=>{\n    if (email&&items){\n\n        const body = JSON.stringify({email,items});\n        const config = {\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        };\n        const res = await appData.post('/cart/update',body,config);\n\n}};"]},"metadata":{},"sourceType":"module"}