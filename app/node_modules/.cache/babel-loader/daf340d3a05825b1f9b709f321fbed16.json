{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { KnobContext } from './KnobContexts';\nimport useKnobValues from './useKnobValues';\n\nvar getKnobControls = function getKnobControls(knobsContext) {\n  var _knobsContext$compone = knobsContext.components,\n      KnobControl = _knobsContext$compone.KnobControl,\n      KnobField = _knobsContext$compone.KnobField,\n      KnobLabel = _knobsContext$compone.KnobLabel;\n  var controls = {\n    Control: KnobControl,\n    Field: KnobField,\n    Label: KnobLabel\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    Object.keys(controls).forEach(function (name) {\n      if (typeof controls[name] === 'undefined') {\n        throw new Error(\"\\\"\".concat(name, \"\\\" is not defined, please check you mapping\"));\n      }\n    });\n  }\n\n  return controls;\n};\n\nvar getKnobComponents = function getKnobComponents(knobsContext) {\n  var _knobsContext$compone2 = knobsContext.components,\n      KnobBoolean = _knobsContext$compone2.KnobBoolean,\n      KnobNumber = _knobsContext$compone2.KnobNumber,\n      KnobRange = _knobsContext$compone2.KnobRange,\n      KnobSelect = _knobsContext$compone2.KnobSelect,\n      KnobString = _knobsContext$compone2.KnobString;\n  var components = {\n    boolean: KnobBoolean,\n    number: KnobNumber,\n    range: KnobRange,\n    select: KnobSelect,\n    string: KnobString\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    Object.keys(components).forEach(function (name) {\n      if (typeof components[name] === 'undefined') {\n        throw new Error(\"A component for \\\"\".concat(name, \"\\\" is not defined, please check you mapping\"));\n      }\n    });\n  }\n\n  return components;\n};\n\nvar KnobInspector = function KnobInspector(props) {\n  var knobContext = React.useContext(KnobContext);\n\n  var _getKnobControls = getKnobControls(knobContext),\n      Control = _getKnobControls.Control,\n      Field = _getKnobControls.Field,\n      Label = _getKnobControls.Label;\n\n  var knobComponents = getKnobComponents(knobContext);\n  var knobValues = useKnobValues();\n  var children = knobValues.length > 0 ? React.createElement(React.Fragment, null, knobValues.map(function (knob) {\n    var setValue = function setValue(value) {\n      return knobContext.setKnobValue(knob.name, value);\n    };\n\n    var knobProps = Object.assign({}, knob, {\n      setValue: setValue\n    });\n    return React.createElement(Field, _extends({}, knobProps, {\n      key: knob.name\n    }), React.createElement(Label, knobProps), React.createElement(Control, knobProps, React.createElement(knobComponents[knob.type], knobProps)));\n  })) : null;\n  return props.children ? props.children(children) : children;\n};\n\nexport default KnobInspector;","map":null,"metadata":{},"sourceType":"module"}