{"ast":null,"code":"var _jsxFileName = \"/media/imran/96b4eb96-0cf8-4ce7-a89b-85777cf350f2/home/imran/Desktop/noctem/app/src/components/cart/cart.component.jsx\";\nimport React, { Component } from 'react';\nimport CartItem from \"./cartItem/cartItem.component\";\nimport { connect } from \"react-redux\";\nimport './cart.style.scss';\nimport { addToCart, deleteFromCart, removeFromCart } from \"../../redux/cart/cart.actions\";\nimport CustomButton from \"../custom-button/customButton.component\"; // class Cart extends React.Component{\n//\n//     render() {\n//\n//\n//\n//\n//         return (\n//             <div className={`cart`}>\n//                 {this.props.cart.items.map(item=>{\n//                     return <CartItem key={item.id} product={item}/>\n//                 })}\n//\n//             </div>\n//         );\n//     }\n// }\n\nconst Cart = ({\n  cart\n}) => {\n  let totalPrice = 0;\n  if (cart.items.length > 0) totalPrice = cart.items.map(item => item.itemCount * item.price).reduce((a, c) => a + c);\n  return React.createElement(\"div\", {\n    className: \"container-fluid cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"totalPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"totalPrice-divider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"-\"), React.createElement(\"span\", {\n    className: \"totalPrice-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"TOTAL PRICE : \", totalPrice.toFixed(2))), React.createElement(\"div\", {\n    className: \"cart-buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    customStyle: \"cart-clear\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Clear All\"), React.createElement(CustomButton, {\n    customStyle: \"cart-checkout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Check Out \")), React.createElement(\"div\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, cart.items.map(item => {\n    return React.createElement(CartItem, {\n      key: item.id,\n      product: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nexport default connect(mapStateToProps)(Cart);","map":{"version":3,"sources":["/media/imran/96b4eb96-0cf8-4ce7-a89b-85777cf350f2/home/imran/Desktop/noctem/app/src/components/cart/cart.component.jsx"],"names":["React","Component","CartItem","connect","addToCart","deleteFromCart","removeFromCart","CustomButton","Cart","cart","totalPrice","items","length","map","item","itemCount","price","reduce","a","c","toFixed","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,mBAAP;AACA,SAAQC,SAAR,EAAmBC,cAAnB,EAAmCC,cAAnC,QAAwD,+BAAxD;AACA,OAAOC,YAAP,MAAyB,yCAAzB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACrB,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAID,IAAI,CAACE,KAAL,CAAWC,MAAX,GAAkB,CAAtB,EACIF,UAAU,GAAGD,IAAI,CAACE,KAAL,CAAWE,GAAX,CAAeC,IAAI,IAAEA,IAAI,CAACC,SAAL,GAAeD,IAAI,CAACE,KAAzC,EAAgDC,MAAhD,CAAuD,CAACC,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAAhE,CAAb;AAEJ,SACI;AAAK,IAAA,SAAS,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAK,IAAA,SAAS,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAEI;AAAM,IAAA,SAAS,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmDT,UAAU,CAACU,OAAX,CAAmB,CAAnB,CAAnD,CAFJ,CADR,EAKI;AAAK,IAAA,SAAS,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,WAAW,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,WAAW,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CALJ,EASI;AAAK,IAAA,SAAS,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,IAAI,CAACE,KAAL,CAAWE,GAAX,CAAeC,IAAI,IAAE;AAClB,WAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACO,EAApB;AAAwB,MAAA,OAAO,EAAEP,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFA,CADL,CATJ,CADJ;AAiBH,CAtBD;;AA0BA,MAAMQ,eAAe,GAAGC,KAAK,IAAE;AAC7B,SAAM;AACFd,IAAAA,IAAI,EAACc,KAAK,CAACd;AADT,GAAN;AAGD,CAJD;;AAKA,eAAeN,OAAO,CAACmB,eAAD,CAAP,CAAyBd,IAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport CartItem from \"./cartItem/cartItem.component\";\nimport {connect} from \"react-redux\";\nimport './cart.style.scss'\nimport {addToCart, deleteFromCart, removeFromCart} from \"../../redux/cart/cart.actions\";\nimport CustomButton from \"../custom-button/customButton.component\";\n\n\n// class Cart extends React.Component{\n//\n//     render() {\n//\n//\n//\n//\n//         return (\n//             <div className={`cart`}>\n//                 {this.props.cart.items.map(item=>{\n//                     return <CartItem key={item.id} product={item}/>\n//                 })}\n//\n//             </div>\n//         );\n//     }\n// }\n\nconst Cart = ({cart}) => {\n    let totalPrice = 0;\n    if (cart.items.length>0)\n        totalPrice = cart.items.map(item=>item.itemCount*item.price).reduce((a,c)=>a+c);\n\n    return (\n        <div className={`container-fluid cart`}>\n                <div className={`totalPrice`}>\n                    <span className={`totalPrice-divider`}>-</span>\n                    <span className={`totalPrice-text`}>TOTAL PRICE : {totalPrice.toFixed(2)}</span>\n                </div>\n            <div className={`cart-buttons`}>\n                <CustomButton customStyle={`cart-clear`}>Clear All</CustomButton>\n                <CustomButton customStyle={`cart-checkout`}>Check Out </CustomButton>\n            </div>\n            <div className={`list`}>\n                {cart.items.map(item=>{\n                    return <CartItem key={item.id} product={item}/>\n                })}\n            </div>\n            </div>\n    );\n};\n\n\n\nconst mapStateToProps = state=>{\n  return{\n      cart:state.cart\n  }\n};\nexport default connect(mapStateToProps)(Cart);\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}