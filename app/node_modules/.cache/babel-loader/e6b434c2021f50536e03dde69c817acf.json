{"ast":null,"code":"import _defineProperty from \"/media/imran/96b4eb96-0cf8-4ce7-a89b-85777cf350f2/home/imran/Desktop/noctem/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_PRODUCTS } from \"../action.types\";\nconst initialState = {\n  products: null\n};\n\nconst shopReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_PRODUCTS:\n      return _objectSpread({}, state, {\n        products: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["/media/imran/96b4eb96-0cf8-4ce7-a89b-85777cf350f2/home/imran/Desktop/noctem/app/src/redux/Shop/shop.reducers.js"],"names":["FETCH_PRODUCTS","initialState","products","shopReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,cAAR,QAA6B,iBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,cAAL;AACI,+BACOI,KADP;AAEIF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFrB;;AAIJ;AACI,aAAOH,KAAP;AAPR;AASH,CAVD;;AAYA,eAAeD,WAAf","sourcesContent":["import {FETCH_PRODUCTS} from \"../action.types\";\n\nconst initialState = {\n    products: null\n};\n\n\nconst shopReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_PRODUCTS:\n            return {\n                ...state,\n                products: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default shopReducer;"]},"metadata":{},"sourceType":"module"}