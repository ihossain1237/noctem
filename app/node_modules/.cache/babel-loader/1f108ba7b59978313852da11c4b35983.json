{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport defaultComponents from './defaultComponents';\nimport { KnobContext, LogContext } from './KnobContexts';\n\nvar KnobProvider = function KnobProvider(props) {\n  var children = props.children,\n      components = props.components;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      knobs = _React$useState2[0],\n      setKnobs = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      items = _React$useState4[0],\n      setItems = _React$useState4[1];\n\n  var registerKnob = function registerKnob(knob) {\n    setKnobs(function (prevKnobs) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (prevKnobs[knob.name]) {\n          throw new Error(\"Knob with name \\\"\".concat(knob.name, \"\\\" has been already registered\"));\n        }\n      }\n\n      return Object.assign({}, prevKnobs, _defineProperty({}, knob.name, knob));\n    });\n  };\n\n  var setKnobValue = function setKnobValue(knobName, knobValue) {\n    setKnobs(function (prevKnob) {\n      return Object.assign({}, prevKnob, _defineProperty({}, knobName, Object.assign({}, prevKnob[knobName], {\n        value: knobValue\n      })));\n    });\n  };\n\n  var unregisterKnob = function unregisterKnob(knobName) {\n    setKnobs(function (prevKnobs) {\n      var newKnobs = Object.assign({}, prevKnobs);\n      delete newKnobs[knobName];\n      return newKnobs;\n    });\n  };\n\n  var appendLog = React.useCallback(function (value) {\n    return setItems(function (prevLog) {\n      return [].concat(_toConsumableArray(prevLog), [value]);\n    });\n  }, []);\n  var clearLog = React.useCallback(function () {\n    return setItems([]);\n  }, []);\n  var knobValue = React.useMemo(function () {\n    return {\n      components: Object.assign({}, defaultComponents, components),\n      knobs: knobs,\n      registerKnob: registerKnob,\n      setKnobValue: setKnobValue,\n      unregisterKnob: unregisterKnob\n    };\n  }, [knobs, components]);\n  var logValue = React.useMemo(function () {\n    return {\n      appendLog: appendLog,\n      clearLog: clearLog,\n      items: items\n    };\n  }, [items]);\n  return React.createElement(KnobContext.Provider, {\n    value: knobValue\n  }, React.createElement(LogContext.Provider, {\n    value: logValue\n  }, children));\n};\n\nKnobProvider.defaultProps = {\n  components: {}\n};\nexport default KnobProvider;","map":null,"metadata":{},"sourceType":"module"}